openapi: 3.0.0
info:
  title: Expense Management System API
  version: 1.0.0
  description: API for managing expenses, incomes, and financial reports

servers:
  - url: http://localhost:3000/api
    description: Local development server

paths:
  /cards:
    post:
      summary: Create a new card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '201':
          description: Card created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
    get:
      summary: List all cards
      responses:
        '200':
          description: List of cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'

  /cards/{id}:
    get:
      summary: Get a specific card
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Card details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
    put:
      summary: Update a card
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          description: Card updated successfully
    delete:
      summary: Delete a card
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Card deleted successfully

  /expenses:
    post:
      summary: Create a new expense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '201':
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
    get:
      summary: List expenses
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: ['Card', 'Variable', 'Fixed']
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'

  /expenses/{id}:
    get:
      summary: Get a specific expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Expense details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
    put:
      summary: Update an expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '200':
          description: Expense updated successfully
    delete:
      summary: Delete an expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Expense deleted successfully

  /incomes:
    post:
      summary: Create a new income
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '201':
          description: Income created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
    get:
      summary: List incomes
      parameters:
        - name: source
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of incomes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'

  /incomes/{id}:
    get:
      summary: Get a specific income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Income details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
    put:
      summary: Update an income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '200':
          description: Income updated successfully
    delete:
      summary: Delete an income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Income deleted successfully

  /reports/expenses:
    get:
      summary: Generate expense report
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Expense report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

  /reports/incomes:
    get:
      summary: Generate income report
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Income report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

  /reports/summary:
    get:
      summary: Generate financial summary report
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Financial summary report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

components:
  schemas:
    Card:
      type: object
      required:
        - name
        - closingDay
        - dueDay
        - cardType
      properties:
        name:
          type: string
        closingDay:
          type: integer
          minimum: 1
          maximum: 31
        dueDay:
          type: integer
          minimum: 1
          maximum: 31
        cardType:
          type: string
          enum: ['Credit', 'Debit']
        lastFourDigits:
          type: string
          pattern: '^\d{4}$'
        creditLimit:
          type: number
          minimum: 0

    Expense:
      type: object
      required:
        - type
        - amount
        - date
      properties:
        type:
          type: string
          enum: ['Card', 'Variable', 'Fixed']
        amount:
          type: number
          minimum: 0
        date:
          type: string
          format: date
        card:
          type: string
          description: Card ID for card expenses
        tag:
          type: string
        installments:
          type: object
          properties:
            current:
              type: integer
              minimum: 1
            total:
              type: integer
              minimum: 1
              maximum: 12
        status:
          type: string
          enum: ['Pending', 'Paid', 'Cancelled']

    Income:
      type: object
      required:
        - amount
        - date
        - source
      properties:
        amount:
          type: number
          minimum: 0
        date:
          type: string
          format: date
        source:
          type: string
        tag:
          type: string
        recurring:
          type: object
          properties:
            isRecurring:
              type: boolean
            frequency:
              type: string
              enum: ['Daily', 'Weekly', 'Monthly', 'Yearly']
        status:
          type: string
          enum: ['Expected', 'Received', 'Cancelled']

    Report:
      type: object
      required:
        - type
        - startDate
        - endDate
        - totalAmount
      properties:
        type:
          type: string
          enum: ['Expense', 'Income', 'Summary']
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        totalAmount:
          type: number
        details:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              amount:
                type: number
              category:
                type: string